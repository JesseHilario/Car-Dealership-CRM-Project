# Generated by Django 5.1.4 on 2025-02-05 15:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('appointment_id', models.AutoField(primary_key=True, serialize=False)),
                ('drop_off', models.DateTimeField(blank=True, null=True)),
                ('pick_up', models.DateTimeField(blank=True, null=True)),
                ('appointment_made_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'appointment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('car_id', models.AutoField(primary_key=True, serialize=False)),
                ('interior', models.CharField(blank=True, max_length=255, null=True)),
                ('odometer', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('license_plate_state', models.CharField(blank=True, max_length=2, null=True)),
                ('license_plate', models.CharField(blank=True, max_length=255, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True)),
                ('is_car_available', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'car',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('f_name', models.CharField(max_length=255)),
                ('m_init', models.CharField(blank=True, max_length=1, null=True)),
                ('l_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=10)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('apt_number', models.CharField(blank=True, max_length=255, null=True)),
                ('street_number', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('package_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('time_since_purchase', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'package',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('part_id', models.AutoField(primary_key=True, serialize=False)),
                ('cost_of_part', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True)),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'part',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('purchase_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_of_purchase', models.DateField()),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=11)),
            ],
            options={
                'db_table': 'purchase',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('estd_time', models.DurationField(blank=True, null=True)),
                ('estd_labor_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('task_type', models.CharField(blank=True, max_length=4, null=True)),
            ],
            options={
                'db_table': 'task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tally1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tally1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('time_slot_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'time_slot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('vehicle_id', models.AutoField(primary_key=True, serialize=False)),
                ('make', models.CharField(max_length=255)),
                ('model', models.CharField(max_length=255)),
                ('year', models.IntegerField()),
                ('tire_type', models.CharField(blank=True, max_length=255, null=True)),
                ('engine_type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vehicle_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdditionalTaskScheduled',
            fields=[
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.appointment')),
            ],
            options={
                'db_table': 'additional_task_scheduled',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartReplaced',
            fields=[
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.appointment')),
            ],
            options={
                'db_table': 'part_replaced',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskPerformed',
            fields=[
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.appointment')),
                ('labor_cost', models.DecimalField(decimal_places=2, max_digits=9)),
                ('time', models.DurationField()),
            ],
            options={
                'db_table': 'task_performed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerCar',
            fields=[
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.customer')),
            ],
            options={
                'db_table': 'customer_car',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerPurchase',
            fields=[
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.customer')),
                ('car_id', models.IntegerField()),
            ],
            options={
                'db_table': 'customer_purchase',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskRecommended',
            fields=[
                ('package', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.package')),
                ('is_mandatory', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'task_recommended',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VehiclePart',
            fields=[
                ('part', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.part')),
            ],
            options={
                'db_table': 'vehicle_part',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequiredPartForTest',
            fields=[
                ('test', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.task')),
            ],
            options={
                'db_table': 'required_part_for_test',
                'managed': False,
            },
        ),
    ]
